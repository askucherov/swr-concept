{"version":3,"file":"static/js/680.3866e901.chunk.js","mappings":"wPAKe,SAASA,IACtB,OAAwBC,EAAAA,EAAAA,UAAiB,IAAzC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAUC,EAAAA,EAAAA,GAAa,CAAEC,KAAM,SAAUC,EAAGL,IAA5CE,MAIR,OACE,UAACI,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,CAAMC,IAAI,KAAV,sBAEA,uCACA,kBAAOC,KAAK,OAAOC,MAAOV,EAAMW,SAPX,SAACC,GAAD,OAAgDX,EAAQW,EAAMC,OAAOH,UAUvFR,EAAQA,EAAMY,KAAI,SAACC,EAAMC,GAAP,OACjB,UAACT,EAAA,EAAD,WAAqBS,EAAI,EAAzB,KAA8BD,EAAKf,OAAxBe,EAAKE,QACb,gBAAKC,MAAO,CAAEC,OAAQ,UAAtB,2BCdE,SAASC,IACtB,IAAuBL,GAAWM,EAAAA,EAAAA,KAA1BC,YAAeP,KAEvB,MAAmB,cAAX,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMX,OAAsC,WAAX,OAAJW,QAAI,IAAJA,OAAA,EAAAA,EAAMX,OAAyB,SAAC,EAAD,KAEzD,SAAC,KAAD,CAAUmB,GAAIC,EAAAA,EAAAA,Y,gGCRjBC,EAAeC,EAAAA,MAAW,kBAAM,iCAChCC,EAAiBD,EAAAA,MAAW,kBAAM,iCAClCE,EAAcF,EAAAA,MAAW,kBAAM,iCAMtB,SAASpB,EAAT,GAAuC,IAArBuB,EAAoB,EAApBA,SACvBd,GAASe,EAAAA,EAAAA,KAATf,KAQFT,EANqB,CACzByB,OAAQN,EACRO,SAAUL,EACVM,MAAOL,GAGyBb,EAAKX,MAEvC,OACE,SAAC,EAAA8B,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACE,SAAC7B,EAAD,UAASuB,Q,uFCVF1B,EAA6B,SAACiC,GACzC,OAAuCC,EAAAA,EAAAA,IAAO,cAAD,OAC7BC,EAAAA,UAAaF,GAAU,MACrC,SAACG,GAAD,OAAiBC,EAAAA,EAAAA,GAAI,MAAOD,MAFtBE,EAAR,EAAQA,KAAMC,EAAd,EAAcA,aAKd,MAAO,CACLC,OANF,EAA4BA,OAO1BzC,MAAOuC,EACPC,aAAcA,K,mECrBH,SAASZ,IACtB,IAAQR,GAAgBD,EAAAA,EAAAA,KAAhBC,YAER,IAAKA,EAAYP,KAAM,MAAM,IAAI6B,MAAM,mBAEvC,MAAO,CAAE7B,KAAMO,EAAYP,Q,6CCEvBS,E,QAASqB,EAAAA,QAAc,SAACC,EAAKC,GAQjC,OAPAD,EAAIC,EAAM9B,IAAM,SAAC+B,GACf,MAA0BA,GAAW,GAA7BZ,EAAR,EAAQA,OAAQa,EAAhB,EAAgBA,MACVC,GAAOC,EAAAA,EAAAA,IAAaJ,EAAMG,KAAMd,GAEtC,OAAOa,EAAK,UAAMC,GAAN,OAAaZ,EAAAA,UAAaW,IAAWC,GAG5CJ,IACN,IAMH","sources":["components/pages/Clients/Clients.tsx","components/pages/Clients/Resolver.tsx","components/shared/Layout/Layout.tsx","hooks/api/users.ts","hooks/useCurrentAuth.ts","lib/Routes.ts"],"sourcesContent":["import Layout from \"components/shared/Layout\";\nimport Text from \"components/uikit/Text\";\nimport { useLoadUsers } from \"hooks/api/users\";\nimport React, { useState } from 'react';\n\nexport default function ClientsPage() {\n  const [name, setName] = useState<string>('');\n  const { users } = useLoadUsers({ role: \"client\", q: name });\n\n  const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => setName(event.target.value);\n\n  return (\n    <Layout>\n      <Text tag=\"h1\">Clients</Text>\n\n      <label>Name: </label>\n      <input type=\"text\" value={name} onChange={handleNameChange} />\n\n\n        {users ? users.map((user, i) => (\n          <Text key={user.id}>{i + 1}. {user.name}</Text>\n        )) : <div style={{ margin: '12px 0'}}>Loading...</div>}\n    </Layout>\n  );\n}\n","import { useLoadCurrentAuth } from 'hooks/api/auth';\nimport Routes from 'lib/Routes';\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport Clients from './Clients';\n\n\nexport default function Resolver() {\n  const { currentAuth: { user } } = useLoadCurrentAuth();\n\n  if (user?.role === 'employee' || user?.role === 'owner') return <Clients />;\n\n  return <Navigate to={Routes.login()} />\n}\n","import useCurrentAuth from 'hooks/useCurrentAuth';\nimport React, { Suspense } from \"react\";\nimport Loader from \"components/uikit/Loader\";\n\nconst ClientLayout = React.lazy(() => import(\"components/shared/Layout/ClientLayout\"));\nconst EmployeeLayout = React.lazy(() => import(\"components/shared/Layout/EmployeeLayout\"));\nconst OwnerLayout = React.lazy(() => import(\"components/shared/Layout/OwnerLayout\"));\n\ninterface IProps {\n  children: React.ReactNode;\n}\n\nexport default function Layout({ children }: IProps) {\n  const { user } = useCurrentAuth();\n\n  const mapRoleToComponent = {\n    client: ClientLayout,\n    employee: EmployeeLayout,\n    owner: OwnerLayout\n  };\n\n  const Layout = mapRoleToComponent[user.role];\n\n  return (\n    <Suspense fallback={<Loader />}>\n      <Layout>{children}</Layout>\n    </Suspense>\n  );\n}\n","import qs from 'query-string';\nimport useSWR, { KeyedMutator } from \"swr\";\nimport { UserRoleType, UserType, UserIncludesType } from 'types/api/user';\nimport API from \"API\";\n\ntype UseLoadUsers = <K extends keyof UserIncludesType | never = never>(params?: {\n  q?: string,\n  role?: UserRoleType,\n  includes?: K[],\n}) => {\n  users: UserType<K>[] | undefined,\n  mutate: KeyedMutator<Partial<UserType<K>>[]>,\n  isValidating: boolean,\n}\n\nexport const useLoadUsers: UseLoadUsers = (params) => {\n  const { data, isValidating, mutate } = useSWR(\n    `/api/users?${qs.stringify(params || {})}`,\n    (url: string) => API(\"GET\", url),\n  );\n\n  return {\n    mutate,\n    users: data,\n    isValidating: isValidating,\n  };\n};\n","import { useLoadCurrentAuth } from 'hooks/api/auth';\nimport { UserType } from 'types/api/user';\n\nexport default function useCurrentAuth(): { user: UserType } {\n  const { currentAuth } = useLoadCurrentAuth();\n\n  if (!currentAuth.user) throw new Error('User not loaded')\n\n  return { user: currentAuth.user };\n}\n","import qs from \"query-string\";\nimport { generatePath, Params } from 'react-router-dom';\nimport { routes, RouteIdType } from '../routeConfig';\n\ntype OptionsType = { params: Params, query: object };\n\ntype RoutesType = {\n  [key in RouteIdType]: (options?: OptionsType) => string;\n}\n\nconst Routes = routes.reduce((acc, route) => {\n  acc[route.id] = (options) => {\n    const { params, query } = options || {};\n    const path = generatePath(route.path, params);\n\n    return query ? `${path}${qs.stringify(query)}` : path;\n  }\n\n  return acc;\n}, {} as RoutesType);\n\n// Routes.home()\n// Routes.firmClient({ params: { code: 'AA1' } })\n// Routes.firmClientTasks({ query: { filter: 'resolved' } })\n\nexport default Routes;\n"],"names":["ClientsPage","useState","name","setName","users","useLoadUsers","role","q","Layout","Text","tag","type","value","onChange","event","target","map","user","i","id","style","margin","Resolver","useLoadCurrentAuth","currentAuth","to","Routes","ClientLayout","React","EmployeeLayout","OwnerLayout","children","useCurrentAuth","client","employee","owner","Suspense","fallback","params","useSWR","qs","url","API","data","isValidating","mutate","Error","routes","acc","route","options","query","path","generatePath"],"sourceRoot":""}