{"version":3,"file":"static/js/477.ddc3e056.chunk.js","mappings":"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","sources":["components/pages/Settings/ClientSettings/ClientSettings.tsx","components/pages/Settings/SettingsForm/SettingsForm.tsx","components/shared/Layout/BaseLayout/BaseLayout.tsx","components/shared/Layout/ClientLayout/ClientLayout.tsx","components/uikit/Badge/Badge.tsx","hooks/useCurrentAuth.ts","hooks/useNewMessagesCount.ts","hooks/useNotifications.ts"],"sourcesContent":["import SettingsForm from 'components/pages/Settings/SettingsForm';\nimport ClientLayout from \"components/shared/Layout/ClientLayout\";\nimport Text from \"components/uikit/Text\";\nimport React from 'react';\n\nexport default function ClientSettings() {\n  return (\n    <ClientLayout>\n      <Text tag=\"h1\">Settings</Text>\n\n      <SettingsForm />\n    </ClientLayout>\n  );\n}\n","import API from 'API';\nimport useCurrentAuth from 'hooks/useCurrentAuth';\nimport React, { useState } from 'react';\nimport { useSWRConfig } from \"swr\";\n\n\nexport default function SettingsForm() {\n  const { user } = useCurrentAuth();\n  const { mutate } = useSWRConfig();\n  const [name, setName] = useState<string>(user.name);\n  const [email, setEmail] = useState<string>(user.email);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => setName(event.target.value);\n  const handleEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => setEmail(event.target.value);\n\n  const handleSubmit = async (e: React.SyntheticEvent) => {\n    e.preventDefault();\n\n    setIsLoading(true);\n\n    const fields = { id: user.id, name, email };\n\n    const updatedUser = await API('PATCH', '/api/users', fields);\n    mutate('/api/auth', { user: updatedUser }, false);\n\n    setIsLoading(false);\n  }\n\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>Name: </label>\n      <input type=\"text\" value={name} onChange={handleNameChange} />\n      <label>Email: </label>\n      <input type=\"text\" value={email} onChange={handleEmailChange} />\n      <p>\n        <input type=\"submit\" disabled={isLoading} value={isLoading ? 'Loading' : 'Apply'} />\n      </p>\n    </form>\n  );\n}\n","import useCurrentAuth from 'hooks/useCurrentAuth';\nimport Routes from 'lib/Routes';\nimport React from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { useSWRConfig } from \"swr\";\nimport API from \"API\";\nimport Loader from \"components/uikit/Loader\";\nimport Text from \"components/uikit/Text\";\nimport \"components/shared/Layout/BaseLayout/BaseLayout.css\";\n\ninterface IProps {\n  sidebar: React.ReactNode;\n  children: React.ReactNode;\n}\n\nexport default function BaseLayout({ sidebar, children }: IProps) {\n  const currentAuth = useCurrentAuth();\n  const navigate = useNavigate();\n  const { mutate } = useSWRConfig();\n  const [isLogoutInProgress, setIsLogoutInProgress] = React.useState<boolean>(\n    false\n  );\n\n  if (isLogoutInProgress) return <Loader />;\n\n  const handleLogout = async () => {\n    setIsLogoutInProgress(true);\n    await API(\"POST\", \"/api/auth\", { role: null });\n    await mutate('/api/auth', { user: null }, false)\n    navigate(Routes.login());\n  }\n\n  return (\n    <div className=\"base-layout\">\n      <div className=\"base-layout__sidebar\">\n        <div>\n          {sidebar}\n        </div>\n\n        <div>\n          <Text tag=\"span\">{currentAuth.user.name} [{currentAuth.user.role}]</Text>\n          <button onClick={handleLogout}>Logout</button>\n        </div>\n      </div>\n\n      <div className=\"base-layout__content\">{children}</div>\n    </div>\n  );\n}\n","import Badge from 'components/uikit/Badge';\nimport useNewMessagesCount from 'hooks/useNewMessagesCount';\nimport Routes from 'lib/Routes';\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Text from \"components/uikit/Text\";\nimport BaseLayout from \"components/shared/Layout/BaseLayout\";\n\ninterface IProps {\n  children: React.ReactNode;\n}\n\nexport default function ClearLayout({ children }: IProps) {\n  const newMessageCount = useNewMessagesCount();\n\n  const sidebar = (\n    <>\n      <Text color=\"white\">\n        <Link to={Routes.home()}>Home</Link>\n      </Text>\n      <Text color=\"white\">\n        <Link to={Routes.messages()}>Messages{newMessageCount ? <Badge>{newMessageCount}</Badge> : null}</Link>\n      </Text>\n      <Text color=\"white\">\n        <Link to={Routes.settings()}>Settings</Link>\n      </Text>\n    </>\n  );\n\n  return <BaseLayout sidebar={sidebar}>{children}</BaseLayout>;\n}\n","import React from \"react\";\nimport \"./Badge.css\";\n\ninterface IProps {\n  children: React.ReactNode;\n}\n\nexport default function Badge({ children }: IProps) {\n\n  return (\n    <span className=\"badge\">\n      {children}\n    </span>\n  );\n}\n","import { useLoadCurrentAuth } from 'hooks/api/auth';\nimport { UserType } from 'types/api/user';\n\nexport default function useCurrentAuth(): { user: UserType } {\n  const { currentAuth } = useLoadCurrentAuth();\n\n  if (!currentAuth.user) throw new Error('User not loaded')\n\n  return { user: currentAuth.user };\n}\n","import useNotifications from 'hooks/useNotifications';\n\nexport default function useNewMessagesCount() {\n  const { notifications } = useNotifications();\n\n  return notifications.reduce((acc, notification) => {\n    acc += notification.messageCount;\n    return acc;\n  }, 0);\n}\n","import { NotificationType } from 'types/api/notification';\nimport { useLoadNotifications } from './api/notifications';\n\nexport default function useNotifications(): { notifications: NotificationType[] } {\n  const { notifications } = useLoadNotifications();\n\n  if (!notifications) throw new Error('Notifications not loaded')\n\n  return { notifications };\n}\n"],"names":["ClientSettings","tag","SettingsForm","user","useCurrentAuth","mutate","useSWRConfig","useState","name","setName","email","setEmail","isLoading","setIsLoading","handleSubmit","e","preventDefault","fields","id","API","updatedUser","onSubmit","type","value","onChange","event","target","disabled","BaseLayout","sidebar","children","currentAuth","navigate","useNavigate","React","isLogoutInProgress","setIsLogoutInProgress","Loader","handleLogout","role","Routes","className","Text","onClick","ClearLayout","newMessageCount","useNewMessagesCount","color","to","Badge","useLoadCurrentAuth","Error","notifications","useLoadNotifications","useNotifications","reduce","acc","notification","messageCount"],"sourceRoot":""}